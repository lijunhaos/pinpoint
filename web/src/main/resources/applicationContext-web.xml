<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

        <!--
    <context:component-scan base-package="com.navercorp.pinpoint.web.dao.hbase,
                                         com.navercorp.pinpoint.web.dao.mysql,
                                         com.navercorp.pinpoint.web.service,
                                         com.navercorp.pinpoint.web.mapper,
                                         com.navercorp.pinpoint.web.filter" />
        -->

    <context:component-scan base-package="com.navercorp.pinpoint.web.dao.hbase,
                                         com.navercorp.pinpoint.web.service,
                                         com.navercorp.pinpoint.web.mapper,
                                         com.navercorp.pinpoint.web.filter,
                                         com.navercorp.pinpoint.web.config,
                                         com.navercorp.pinpoint.web.view,
                                         com.navercorp.pinpoint.common.server.bo,
                                         com.navercorp.pinpoint.common.server.util" />

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:hbase.properties</value>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="pinpointWebProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:pinpoint-web.properties"/>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>
    
    <import resource="classpath:applicationContext-hbase.xml" />
    <import resource="classpath:applicationContext-datasource.xml" />
    <import resource="classpath:applicationContext-dao-config.xml" />
    <import resource="classpath:applicationContext-cache.xml" />
    <import resource="classpath:applicationContext-websocket.xml" />

    <bean id="spanMapper" class="com.navercorp.pinpoint.web.mapper.SpanMapper">
    </bean>

    <bean id="AlarmMessageSenderImpl" class="com.navercorp.pinpoint.web.alarm.AlarmMessageSenderImpl"/>

    <bean id="jsonObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
    </bean>
    
    <bean id="rangeFactory" class="com.navercorp.pinpoint.web.vo.RangeFactory">
    </bean>

    <bean id="timeSlot" class="com.navercorp.pinpoint.common.util.DefaultTimeSlot">
    </bean>

    <bean id="config" class="com.navercorp.pinpoint.web.config.WebConfig">
    </bean>
    
    <bean id="commandHeaderTBaseSerializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseSerializerFactory">
    </bean>

    <bean id="commandHeaderTBaseDeserializerFactory" class="com.navercorp.pinpoint.thrift.io.CommandHeaderTBaseDeserializerFactory">
    </bean>

    <bean id="clusterConnectionManager" class="com.navercorp.pinpoint.web.cluster.connection.ClusterConnectionManager">
        <constructor-arg ref="config" />
    </bean>

    <bean id="clusterDataManager" class="com.navercorp.pinpoint.web.cluster.zookeeper.ZookeeperClusterDataManager">
        <constructor-arg ref="config" />
    </bean>

    <bean id="clusterManager" class="com.navercorp.pinpoint.web.cluster.ClusterManager">
        <constructor-arg ref="config" />
    </bean>

    <bean id="agentEventMessageDeserializer" class="com.navercorp.pinpoint.common.server.util.AgentEventMessageDeserializer">
        <constructor-arg ref="commandHeaderTBaseDeserializerFactory"/>
    </bean>

    <bean id="slf4jCommonLoggerFactory" class="com.navercorp.pinpoint.common.server.util.Slf4jCommonLoggerFactory">
    </bean>

    <bean id="typeLoaderService" class="com.navercorp.pinpoint.common.service.DefaultTraceMetadataLoaderService">
    </bean>

    <bean id="serviceTypeRegistryService" class="com.navercorp.pinpoint.common.service.DefaultServiceTypeRegistryService">
        <constructor-arg ref="typeLoaderService"/>
        <constructor-arg ref="slf4jCommonLoggerFactory"/>
    </bean>

    <bean id="annotationKeyRegistryService" class="com.navercorp.pinpoint.common.service.DefaultAnnotationKeyRegistryService">
        <constructor-arg ref="typeLoaderService"/>
        <constructor-arg ref="slf4jCommonLoggerFactory"/>
    </bean>
    
    <bean id="spanServiceImpl" class="com.navercorp.pinpoint.web.service.SpanServiceImpl">
        <property name="sqlMetaDataDao" ref="hbaseSqlMetaDataDao"/>
    </bean>
    
    <bean id="hbaseSqlMetaDataDao" class="com.navercorp.pinpoint.web.dao.hbase.HbaseSqlMetaDataDao">
        <property name="rowKeyDistributorByHashPrefix" ref="metadataRowKeyDistributor2"></property>
        <property name="sqlMetaDataMapper" ref="sqlMetaDataMapper2"></property>
    </bean>

    <bean id="sqlMetaDataMapper" class="com.navercorp.pinpoint.web.mapper.SqlMetaDataMapper">
        <property name="rowKeyDistributorByHashPrefix" ref="metadataRowKeyDistributor"></property>
    </bean>
    
    <bean id="sqlMetaDataMapper2" class="com.navercorp.pinpoint.web.mapper.SqlMetaDataMapper">
        <property name="rowKeyDistributorByHashPrefix" ref="metadataRowKeyDistributor2"></property>
    </bean>
    
    <!-- add to load for batch spring configuration.we need to conditional logic to behave differently base on 'batch.enable' config value -->
    <bean id="batchConfigruation" class="com.navercorp.pinpoint.web.batch.BatchConfiguration"/>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>

    <!-- Velocity模板引擎 -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <!-- 配置引擎读取数据的编码格式 -->
                <prop key="input.encoding">UTF-8</prop>
                <!-- 配置引擎输出数据的编码格式 -->
                <prop key="output.encoding">UTF-8</prop>
                <prop key="default.contentType">application/x-www-form-urlencoded; charset=UTF-8</prop>
            </props>
        </property>
    </bean>
</beans>
